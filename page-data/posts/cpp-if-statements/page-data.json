{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/cpp-if-statements","result":{"data":{"markdownRemark":{"id":"a120d866-5394-5bb2-b71a-07f487e4ed54","html":"<ul>\n<li><a href=\"#if-statement\">If Statement</a></li>\n<li><a href=\"#if...else\">If…Else</a></li>\n<li><a href=\"#if...else-if\">If…Else If</a></li>\n<li><a href=\"#related\">Related</a></li>\n</ul>\n<p>If statements in C++ and other programming languages are used to control the flow of the program. Code put inside the brackets <code class=\"language-text\">{ }</code> of the if statement are only ran if the condition inside the parentheses <code class=\"language-text\">( )</code> are true.</p>\n<h2 id=\"if-statement\" style=\"position:relative;\"><a href=\"#if-statement\" aria-label=\"if statement permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>If Statement</h2>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">int main() {\n    if (1 + 1 == 3) {\n        cout &lt;&lt; &quot;Neat!&quot;;\n    }\n    cout &lt;&lt; &quot;foo&quot; &lt;&lt; endl;\n\n    return 0;\n}</code></pre></div>\n<p>The code above would compile but it wouldn’t output anything. This is because the if statement is <strong>checking</strong> if <code class=\"language-text\">1 + 1</code> is equal to <code class=\"language-text\">3</code>, in this case it isn’t, therefore would skip to the code that comes after the if statement (if applicable).</p>\n<h2 id=\"ifelse\" style=\"position:relative;\"><a href=\"#ifelse\" aria-label=\"ifelse permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>If…Else</h2>\n<p>Example 1:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">int main() {\n    if (1 + 1 == 2) {\n        cout &lt;&lt; &quot;Neat!&quot; &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; &quot;That condition was false.&quot; &lt;&lt; endl;\n    }\n    cout &lt;&lt; &quot;foo&quot;;\n\n    return 0;\n}</code></pre></div>\n<p>Output:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Neat!\nfoo</code></pre></div>\n<p>The code above would run but this time the condition inside the if statement is true, therefore it will output <code class=\"language-text\">Neat!</code>. However, it won’t run the statement inside the <code class=\"language-text\">else</code> block, because that only runs when the condition is false.</p>\n<p>foo still gets outputted because it is outside the if statement. It gets outputted regardless of what happens inside the if block.</p>\n<p>Example 2:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">int main() {\n    if (1 + 1 == 3) {\n        cout &lt;&lt; &quot;Neat!&quot; &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; &quot;That condition was false.&quot; &lt;&lt; endl;\n    }\n    cout &lt;&lt; &quot;foo&quot;;\n\n    return 0;\n}</code></pre></div>\n<p>This is almost the same code as above with the only difference is that the condition of the if statement should be false, therefore it will run the code inside the else block but not run the code inside the if block.</p>\n<p>Output:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">That condition was false.\nfoo</code></pre></div>\n<h2 id=\"ifelse-if\" style=\"position:relative;\"><a href=\"#ifelse-if\" aria-label=\"ifelse if permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>If…else if</h2>\n<p>If…else is cool and all, but what about for when you want else only to run if a certain condition is met as well? This is where else if comes in.</p>\n<p>Example 1:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">int main() {\n    if (1 + 1 == 3) {\n        cout &lt;&lt; &quot;Nice&quot;;\n    } else if (1 + 1 == 2) {\n        cout &lt;&lt; &quot;Cool&quot;;\n    }\n    cout &lt;&lt; &quot;foo&quot;;\n}</code></pre></div>\n<p>The example above works similarly to the one in <a href=\"#if...else\">If…Else</a>, but this time we explicitly tell the compiler that only run the else if block if the original if condition failed <strong>and</strong> the if else condition passes.</p>\n<p>Example 2:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">int main() {\n    if (1 + 1 == 3) {\n        cout &lt;&lt; &quot;Nice&quot;;\n    } else if (1 + 1 == 0) {\n        cout &lt;&lt; &quot;Cool&quot;\n    }\n    cout &lt;&lt; &quot;foo&quot;;\n}</code></pre></div>\n<p>Output:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">foo</code></pre></div>\n<p>See how this one only outputted <code class=\"language-text\">foo</code>? That happened because both the if condition and the else if condition failed.</p>\n<p>If statements and other related statements are very powerful. It’s one of the most used statements in programming. To make best use of these, it’s best to use variables in tandem. This makes it so that your program can handle variable inputs and do operations accordingly.</p>\n<h2 id=\"related\" style=\"position:relative;\"><a href=\"#related\" aria-label=\"related permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Related:</h2>\n<ul>\n<li><a href=\"/posts/cpp-variables\">Variables and Data Types</a></li>\n</ul>","fields":{"slug":"/posts/cpp-if-statements","tagSlugs":["/tag/c/","/tag/tutorial/","/tag/if/","/tag/flow/"]},"frontmatter":{"date":"2020-09-14T12:50:03","description":"C++ and other programming languages use if statements to control the flow of the program. Syntax: if (condition) { //code }","tags":["C++","Tutorial","If","Flow"],"title":"If Statements","socialImage":null}}},"pageContext":{"slug":"/posts/cpp-if-statements"}},"staticQueryHashes":["251939775","3942705351","401334301"]}