{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/cpp-if-statements-advanced","result":{"data":{"markdownRemark":{"id":"559ca141-b830-5e48-aa6b-fea271ac640e","html":"<ul>\n<li><a href=\"#using-with-variables\">Using With Variables</a></li>\n<li><a href=\"#evenodd\">Even/Odd</a></li>\n<li><a href=\"#related\">Related</a></li>\n</ul>\n<h2 id=\"using-with-variables\" style=\"position:relative;\"><a href=\"#using-with-variables\" aria-label=\"using with variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using with variables</h2>\n<p>If statements are also more useful if used together with <a href=\"/cpp-variables\">variables</a> and <a href=\"/cpp-input-output\">input/output</a>. </p>\n<p>Let’s say in our program that if the user inputted a number less than 5, it outputs <code class=\"language-text\">Too low</code>, while if the user inputs a number greater than 5, it outputs <code class=\"language-text\">Too high</code>, however if the user inputs exactly 5 the program outputs <code class=\"language-text\">Just right</code>.</p>\n<p>Example 1:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> input<span class=\"token punctuation\">;</span>\n\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Input a number:\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n    cin <span class=\"token operator\">>></span> input<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>input <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>       <span class=\"token comment\">// Checks if input is equal to 5</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Just right\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>input <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// Checks if input is less than 5</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Too low\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>input <span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// Checks if input is more than 5</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Too high\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The <code class=\"language-text\">==</code> operator compares the values if they are the same.</p>\n<p>Output 1a:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Input a number:\n3\nToo low</code></pre></div>\n<p>Output 1b:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Input a number:\n8\nToo high</code></pre></div>\n<h2 id=\"evenodd\" style=\"position:relative;\"><a href=\"#evenodd\" aria-label=\"evenodd permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Even/Odd</h2>\n<p>An example of if statements in action is a program that will determine if the number the user inputted is even or odd. First let’s lay some math.</p>\n<ul>\n<li>When a number is divided by 2 then has <strong>no remainder</strong> then the number is <strong>even</strong></li>\n<li>When a number is divided by 2 then has <strong>a remainder</strong> then the number is <strong>odd</strong></li>\n</ul>\n<p>To determine the remainder we can simply use the modulo operator denoted with <code class=\"language-text\">%</code> (ex. <code class=\"language-text\">10 % 2</code>). The example is the same as dividing 10 by 2, but instead of returning the quotient, we’ll get the remainder.</p>\n<p>Let’s modify the main function of our previous program.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> input<span class=\"token punctuation\">;</span>\n\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Enter a number:\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>input <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>        <span class=\"token comment\">// Checks if remainder is 0</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"The number you entered is even\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>input <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// Checks if remainder is not 0</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"The number you entered is odd\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The <code class=\"language-text\">!=</code> operator checks if the values are <strong>not</strong> the same.</p>\n<h2 id=\"related\" style=\"position:relative;\"><a href=\"#related\" aria-label=\"related permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Related:</h2>\n<ul>\n<li><a href=\"/posts/cpp-input-output\">Input and Output</a></li>\n<li><a href=\"/posts/cpp-variables\">Variables and Data Types</a></li>\n<li><a href=\"/posts/cpp-if-statements\">If Statements</a></li>\n</ul>","fields":{"slug":"/posts/cpp-if-statements-advanced","tagSlugs":["/tag/c/","/tag/tutorial/","/tag/if/","/tag/flow/"]},"frontmatter":{"date":"2020-09-17T12:50:03","description":"C++ and other programming languages use if statements to control the flow of the program. Syntax: if (condition) { //code }. C++ variables are best used with variables. The example below tests if the input is even or odd.","tags":["C++","Tutorial","If","Flow"],"title":"If Statements 2","socialImage":null}}},"pageContext":{"slug":"/posts/cpp-if-statements-advanced"}},"staticQueryHashes":["251939775","3942705351","401334301"]}