{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/cpp-inheritance","result":{"data":{"markdownRemark":{"id":"78243a46-8e27-54c6-b151-ac84281db8c8","html":"<ul>\n<li><a href=\"#types-of-inheritance\">Types of Inheritance</a></li>\n<li><a href=\"#syntax\">Syntax</a></li>\n<li><a href=\"#related\">Related</a></li>\n</ul>\n<p>Inheritance is a way to base a class to a parent class. The inherited class inherits the attributes and methods of the parent class. Another advantage of using classes is that you can inherit one class from a base class or sometimes known as a parent class. This is useful when youâ€™re planning to make a second class that has the same features as another class but want to add more attributes and methods while keeping it distinct.</p>\n<h2 id=\"types-of-inheritance\" style=\"position:relative;\"><a href=\"#types-of-inheritance\" aria-label=\"types of inheritance permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Types of Inheritance</h2>\n<p>There are five types of inheritance, namely:</p>\n<ul>\n<li>Single Inheritance - the parent has one child</li>\n<li>Multiple Inheritance - multiple parents, one child</li>\n<li>Hierarchical Inheritance - single parent, multiple children</li>\n<li>Multilevel Inheritance - the parent has children, grandchildren, and so on and so forth</li>\n<li>Hybrid Inheritance - a combination of multiple types of inheritance</li>\n</ul>\n<h2 id=\"syntax\" style=\"position:relative;\"><a href=\"#syntax\" aria-label=\"syntax permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Syntax</h2>\n<p>To inherit a class from a base class simply use the syntax</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">SubClass</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">BaseClass</span></span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Item</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    string name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">double</span> price<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n    string id<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Weapon</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Item</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">int</span> damage<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> durability<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Consumable</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">private</span> <span class=\"token class-name\">Item</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    string effect<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> effect_multiplier<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The <code class=\"language-text\">Weapon</code> class is derived from the <code class=\"language-text\">Item</code> class. This results in the <code class=\"language-text\">Weapon</code> class having the following attributes:</p>\n<p><em>Notice how private attributes or methods do not get inherited</em></p>\n<div class=\"gatsby-highlight\" data-language=\"plaintext\"><pre class=\"language-plaintext\"><code class=\"language-plaintext\">Weapon\n  public\n    name\n    price\n    damage\n    durability\n  private\n    *nothing*</code></pre></div>\n<p>The <code class=\"language-text\">Consumable</code> class is also derived from the <code class=\"language-text\">Item</code> class, but take note of the <code class=\"language-text\">private</code> access specifier on the class declaration. This means that the public and protected classes from the base class will become a private attribute or method of the sub class. The <code class=\"language-text\">Consumable</code> class will now have the following attributes:</p>\n<p><em>Notice how the <code class=\"language-text\">name</code> and <code class=\"language-text\">price</code> attributes from the base class, are inherited to the private parts of the <code class=\"language-text\">Consumable</code> class.</em></p>\n<div class=\"gatsby-highlight\" data-language=\"plaintext\"><pre class=\"language-plaintext\"><code class=\"language-plaintext\">Consumable\n  public\n    effect\n    effect_multiplier\n  private\n    name\n    price</code></pre></div>\n<h2 id=\"related\" style=\"position:relative;\"><a href=\"#related\" aria-label=\"related permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Related:</h2>\n<ul>\n<li><a href=\"/posts/cpp-constructors\">Constructors</a></li>\n<li><a href=\"/posts/cpp-variables\">Variables and Data Types</a></li>\n<li><a href=\"/posts/cpp-functions\">Functions</a></li>\n<li><a href=\"/posts/cpp-classes-and-objects\">Classes and Objects</a></li>\n</ul>","fields":{"slug":"/posts/cpp-inheritance","tagSlugs":["/tag/c/","/tag/tutorial/","/tag/classes/","/tag/functions/","/tag/object-oriented-programming/"]},"frontmatter":{"date":"2021-03-26T16:25:03+08:00","description":"Inheritance is a way to base a class to a parent class. The inherited class inherits the attributes and methods of the parent class.","tags":["C++","Tutorial","Classes","Functions","Object Oriented Programming"],"title":"Inheritance","socialImage":null}}},"pageContext":{"slug":"/posts/cpp-inheritance"}},"staticQueryHashes":["251939775","3942705351","401334301"]}