{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/cpp-do-while-loop","result":{"data":{"markdownRemark":{"id":"62a6bdf7-4ae6-55fe-96d9-3eeab5ad6a02","html":"<ul>\n<li><a href=\"#basic-syntax\">Basic Syntax</a></li>\n<li><a href=\"#related\">Related</a></li>\n</ul>\n<p>The difference between do while and a normal <a href=\"/posts/cpp-while-loop\">while loop</a> is that the code inside the scope { } of the loop is ran first before evaluating the condition.</p>\n<h2 id=\"basic-syntax\" style=\"position:relative;\"><a href=\"#basic-syntax\" aria-label=\"basic syntax permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Basic Syntax</h2>\n<p>Doâ€¦while loops are similar to while loops in a way that they both only need a condition. Only the order of execution and evaluation are different between the two. This makes it so that the program is required to execute the loop at least once.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n  <span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> i <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Output:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">0</code></pre></div>\n<p>Even though the condition inside our while loop is false, the code will still run atleast once because the condition is not checked for the first iteration. If we did the same thing with a normal while loop like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> i <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We will get <strong>no output</strong>, because the condition is checked first before running anything inside the loop.</p>\n<h3 id=\"the-program-does-these-steps\" style=\"position:relative;\"><a href=\"#the-program-does-these-steps\" aria-label=\"the program does these steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The program does these steps:</h3>\n<ol>\n<li>Declare i to be equal to 0 (This is not part of the loop)</li>\n<li>Output the current value of i</li>\n<li>Check if i is less than 0, if it is, return to step 2, if not, go to step 4</li>\n<li>End the program</li>\n</ol>\n<h2 id=\"related\" style=\"position:relative;\"><a href=\"#related\" aria-label=\"related permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Related:</h2>\n<ul>\n<li><a href=\"/posts/cpp-input-output\">Input and Output</a></li>\n<li><a href=\"/posts/cpp-variables\">Variables and Data Types</a></li>\n<li><a href=\"/posts/cpp-if-statements-advanced\">If Statements 2</a></li>\n<li><a href=\"/posts/cpp-while-loop\">While Loop</a></li>\n<li><a href=\"/posts/cpp-for-loop\">For Loop</a></li>\n</ul>","fields":{"slug":"/posts/cpp-do-while-loop","tagSlugs":["/tag/c/","/tag/tutorial/","/tag/do-while/","/tag/flow/","/tag/loop/"]},"frontmatter":{"date":"2020-09-23T12:50:03","description":"The difference between while and do while is that the code inside the scope { } of the loop is ran first before evaluating the condition.","tags":["C++","Tutorial","Do While","Flow","Loop"],"title":"Do While Loop","socialImage":null}}},"pageContext":{"slug":"/posts/cpp-do-while-loop"}},"staticQueryHashes":["251939775","3942705351","401334301"]}